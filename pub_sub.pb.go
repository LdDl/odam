// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: pub_sub.proto

package odam

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enumeration for possible event types
type EventType int32

const (
	EventType_UNDEFINED_EVENT     EventType = 0
	EventType_CROSS_LINE_EVENT    EventType = 1
	EventType_ENTER_POLYGON_EVENT EventType = 2
	EventType_LEAVE_POLYGON_EVENT EventType = 3
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "UNDEFINED_EVENT",
		1: "CROSS_LINE_EVENT",
		2: "ENTER_POLYGON_EVENT",
		3: "LEAVE_POLYGON_EVENT",
	}
	EventType_value = map[string]int32{
		"UNDEFINED_EVENT":     0,
		"CROSS_LINE_EVENT":    1,
		"ENTER_POLYGON_EVENT": 2,
		"LEAVE_POLYGON_EVENT": 3,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_pub_sub_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_pub_sub_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_pub_sub_proto_rawDescGZIP(), []int{0}
}

// Alias to multiple event types
type EventTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventTypes []EventType `protobuf:"varint,1,rep,packed,name=event_types,json=eventTypes,proto3,enum=odam.EventType" json:"event_types,omitempty"`
}

func (x *EventTypes) Reset() {
	*x = EventTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_sub_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventTypes) ProtoMessage() {}

func (x *EventTypes) ProtoReflect() protoreflect.Message {
	mi := &file_pub_sub_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventTypes.ProtoReflect.Descriptor instead.
func (*EventTypes) Descriptor() ([]byte, []int) {
	return file_pub_sub_proto_rawDescGZIP(), []int{0}
}

func (x *EventTypes) GetEventTypes() []EventType {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

// Event itself
type EventInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Event identifier
	EventId string `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// Event type
	EventType EventType `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=odam.EventType" json:"event_type,omitempty"`
	// Timestamp (Unix UTC) of event
	EventTm int64 `protobuf:"varint,3,opt,name=event_tm,json=eventTm,proto3" json:"event_tm,omitempty"`
}

func (x *EventInformation) Reset() {
	*x = EventInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pub_sub_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventInformation) ProtoMessage() {}

func (x *EventInformation) ProtoReflect() protoreflect.Message {
	mi := &file_pub_sub_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventInformation.ProtoReflect.Descriptor instead.
func (*EventInformation) Descriptor() ([]byte, []int) {
	return file_pub_sub_proto_rawDescGZIP(), []int{1}
}

func (x *EventInformation) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *EventInformation) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_UNDEFINED_EVENT
}

func (x *EventInformation) GetEventTm() int64 {
	if x != nil {
		return x.EventTm
	}
	return 0
}

var File_pub_sub_proto protoreflect.FileDescriptor

var file_pub_sub_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x75, 0x62, 0x5f, 0x73, 0x75, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x6f, 0x64, 0x61, 0x6d, 0x22, 0x3e, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6f, 0x64, 0x61, 0x6d, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x78, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6f, 0x64, 0x61, 0x6d, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x6d, 0x2a,
	0x68, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f,
	0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x52, 0x4f, 0x53, 0x53, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x45, 0x4e, 0x54, 0x45, 0x52,
	0x5f, 0x50, 0x4f, 0x4c, 0x59, 0x47, 0x4f, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x02,
	0x12, 0x17, 0x0a, 0x13, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x50, 0x4f, 0x4c, 0x59, 0x47, 0x4f,
	0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x32, 0x48, 0x0a, 0x0b, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x44, 0x61, 0x4d, 0x12, 0x39, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x10, 0x2e, 0x6f, 0x64, 0x61, 0x6d, 0x2e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x1a, 0x16, 0x2e, 0x6f, 0x64, 0x61, 0x6d, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x00, 0x30, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x3b, 0x6f, 0x64, 0x61, 0x6d, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pub_sub_proto_rawDescOnce sync.Once
	file_pub_sub_proto_rawDescData = file_pub_sub_proto_rawDesc
)

func file_pub_sub_proto_rawDescGZIP() []byte {
	file_pub_sub_proto_rawDescOnce.Do(func() {
		file_pub_sub_proto_rawDescData = protoimpl.X.CompressGZIP(file_pub_sub_proto_rawDescData)
	})
	return file_pub_sub_proto_rawDescData
}

var file_pub_sub_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pub_sub_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pub_sub_proto_goTypes = []interface{}{
	(EventType)(0),           // 0: odam.EventType
	(*EventTypes)(nil),       // 1: odam.EventTypes
	(*EventInformation)(nil), // 2: odam.EventInformation
}
var file_pub_sub_proto_depIdxs = []int32{
	0, // 0: odam.EventTypes.event_types:type_name -> odam.EventType
	0, // 1: odam.EventInformation.event_type:type_name -> odam.EventType
	1, // 2: odam.ServiceODaM.Subscribe:input_type -> odam.EventTypes
	2, // 3: odam.ServiceODaM.Subscribe:output_type -> odam.EventInformation
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pub_sub_proto_init() }
func file_pub_sub_proto_init() {
	if File_pub_sub_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pub_sub_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pub_sub_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pub_sub_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pub_sub_proto_goTypes,
		DependencyIndexes: file_pub_sub_proto_depIdxs,
		EnumInfos:         file_pub_sub_proto_enumTypes,
		MessageInfos:      file_pub_sub_proto_msgTypes,
	}.Build()
	File_pub_sub_proto = out.File
	file_pub_sub_proto_rawDesc = nil
	file_pub_sub_proto_goTypes = nil
	file_pub_sub_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ServiceODaMClient is the client API for ServiceODaM service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceODaMClient interface {
	// Subscribe to provided events
	Subscribe(ctx context.Context, in *EventTypes, opts ...grpc.CallOption) (ServiceODaM_SubscribeClient, error)
}

type serviceODaMClient struct {
	cc grpc.ClientConnInterface
}

func NewServiceODaMClient(cc grpc.ClientConnInterface) ServiceODaMClient {
	return &serviceODaMClient{cc}
}

func (c *serviceODaMClient) Subscribe(ctx context.Context, in *EventTypes, opts ...grpc.CallOption) (ServiceODaM_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ServiceODaM_serviceDesc.Streams[0], "/odam.ServiceODaM/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &serviceODaMSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ServiceODaM_SubscribeClient interface {
	Recv() (*EventInformation, error)
	grpc.ClientStream
}

type serviceODaMSubscribeClient struct {
	grpc.ClientStream
}

func (x *serviceODaMSubscribeClient) Recv() (*EventInformation, error) {
	m := new(EventInformation)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ServiceODaMServer is the server API for ServiceODaM service.
type ServiceODaMServer interface {
	// Subscribe to provided events
	Subscribe(*EventTypes, ServiceODaM_SubscribeServer) error
}

// UnimplementedServiceODaMServer can be embedded to have forward compatible implementations.
type UnimplementedServiceODaMServer struct {
}

func (*UnimplementedServiceODaMServer) Subscribe(*EventTypes, ServiceODaM_SubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}

func RegisterServiceODaMServer(s *grpc.Server, srv ServiceODaMServer) {
	s.RegisterService(&_ServiceODaM_serviceDesc, srv)
}

func _ServiceODaM_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventTypes)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ServiceODaMServer).Subscribe(m, &serviceODaMSubscribeServer{stream})
}

type ServiceODaM_SubscribeServer interface {
	Send(*EventInformation) error
	grpc.ServerStream
}

type serviceODaMSubscribeServer struct {
	grpc.ServerStream
}

func (x *serviceODaMSubscribeServer) Send(m *EventInformation) error {
	return x.ServerStream.SendMsg(m)
}

var _ServiceODaM_serviceDesc = grpc.ServiceDesc{
	ServiceName: "odam.ServiceODaM",
	HandlerType: (*ServiceODaMServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _ServiceODaM_Subscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pub_sub.proto",
}
